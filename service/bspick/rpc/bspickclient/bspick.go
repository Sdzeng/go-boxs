// Code generated by goctl. DO NOT EDIT.
// Source: bspick.proto

package bspickclient

import (
	"context"

	"rpc/types/bspick"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetDataReq       = bspick.GetDataReq
	GetDataResp      = bspick.GetDataResp
	GetDataResp_Node = bspick.GetDataResp_Node

	Bspick interface {
		GetData(ctx context.Context, in *GetDataReq, opts ...grpc.CallOption) (*GetDataResp, error)
	}

	defaultBspick struct {
		cli zrpc.Client
	}
)

func NewBspick(cli zrpc.Client) Bspick {
	return &defaultBspick{
		cli: cli,
	}
}

func (m *defaultBspick) GetData(ctx context.Context, in *GetDataReq, opts ...grpc.CallOption) (*GetDataResp, error) {
	client := bspick.NewBspickClient(m.cli.Conn())
	return client.GetData(ctx, in, opts...)
}
